// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: acoustic_transmission.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcousticTransmission {

  /// <summary>Holder for reflection information generated from acoustic_transmission.proto</summary>
  public static partial class AcousticTransmissionReflection {

    #region Descriptor
    /// <summary>File descriptor for acoustic_transmission.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AcousticTransmissionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChthY291c3RpY190cmFuc21pc3Npb24ucHJvdG8SFWFjb3VzdGljX3RyYW5z",
            "bWlzc2lvbiIhCg5Db21tYW5kUmVxdWVzdBIPCgdhZGRyZXNzGAEgASgJIpIB",
            "Cg9BY291c3RpY1BheWxvYWQSDwoHYWRkcmVzcxgBIAEoCRI4CgdwYXlsb2Fk",
            "GAIgASgLMicuYWNvdXN0aWNfdHJhbnNtaXNzaW9uLk5hbm9tb2RlbVBheWxv",
            "YWQSNAoFcmFuZ2UYAyABKAsyJS5hY291c3RpY190cmFuc21pc3Npb24uTmFu",
            "b21vZGVtUmFuZ2UiXQoQQWNvdXN0aWNSZXNwb25zZRIPCgdzdWNjZXNzGAEg",
            "ASgIEjgKB3JlcXVlc3QYAiABKAsyJy5hY291c3RpY190cmFuc21pc3Npb24u",
            "TmFub21vZGVtUmVxdWVzdCKEAgoQTmFub21vZGVtUmVxdWVzdBI+CghyZXFf",
            "dHlwZRgBIAEoDjIsLmFjb3VzdGljX3RyYW5zbWlzc2lvbi5OYW5vbW9kZW1S",
            "ZXF1ZXN0LlR5cGUSEQoJc2NoZWR1bGVkGAIgASgIEgsKA21zZxgDIAEoCRIK",
            "CgJpZBgEIAEoDSKDAQoEVHlwZRIKCgZCUkRDU1QQABIKCgZVTklDU1QQARIK",
            "CgZQSU5HSUQQAhIKCgZWT0xUSUQQAxIKCgZDSE5HSUQQBBIKCgZTVEFUVVMQ",
            "BRIMCghVTklTVEFDSxAGEgsKB1RFU1RNU0cQBxILCgdFQ0hPTVNHEAgSCwoH",
            "UVVBTElUWRAJIpIBChBOYW5vbW9kZW1QYXlsb2FkEj4KCG1zZ190eXBlGAEg",
            "ASgOMiwuYWNvdXN0aWNfdHJhbnNtaXNzaW9uLk5hbm9tb2RlbVBheWxvYWQu",
            "VHlwZRILCgNtc2cYAiABKAkSEQoJc2VuZGVyX2lkGAMgASgNIh4KBFR5cGUS",
            "CgoGQlJEQ1NUEAASCgoGVU5JQ1NUEAEiPAoOTmFub21vZGVtUmFuZ2USDQoF",
            "cmFuZ2UYASABKA0SDwoHcmFuZ2VfbRgCIAEoAhIKCgJpZBgDIAEoDTLjAQoJ",
            "QWNvdXN0aWNzEmgKEkdldEFjb3VzdGljUmVxdWVzdBIlLmFjb3VzdGljX3Ry",
            "YW5zbWlzc2lvbi5Db21tYW5kUmVxdWVzdBonLmFjb3VzdGljX3RyYW5zbWlz",
            "c2lvbi5BY291c3RpY1Jlc3BvbnNlIgAwARJsChVSZXR1cm5BY291c3RpY1Bh",
            "eWxvYWQSJi5hY291c3RpY190cmFuc21pc3Npb24uQWNvdXN0aWNQYXlsb2Fk",
            "GicuYWNvdXN0aWNfdHJhbnNtaXNzaW9uLkFjb3VzdGljUmVzcG9uc2UiADAB",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcousticTransmission.CommandRequest), global::AcousticTransmission.CommandRequest.Parser, new[]{ "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcousticTransmission.AcousticPayload), global::AcousticTransmission.AcousticPayload.Parser, new[]{ "Address", "Payload", "Range" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcousticTransmission.AcousticResponse), global::AcousticTransmission.AcousticResponse.Parser, new[]{ "Success", "Request" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcousticTransmission.NanomodemRequest), global::AcousticTransmission.NanomodemRequest.Parser, new[]{ "ReqType", "Scheduled", "Msg", "Id" }, null, new[]{ typeof(global::AcousticTransmission.NanomodemRequest.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcousticTransmission.NanomodemPayload), global::AcousticTransmission.NanomodemPayload.Parser, new[]{ "MsgType", "Msg", "SenderId" }, null, new[]{ typeof(global::AcousticTransmission.NanomodemPayload.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcousticTransmission.NanomodemRange), global::AcousticTransmission.NanomodemRange.Parser, new[]{ "Range", "RangeM", "Id" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CommandRequest : pb::IMessage<CommandRequest> {
    private static readonly pb::MessageParser<CommandRequest> _parser = new pb::MessageParser<CommandRequest>(() => new CommandRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcousticTransmission.AcousticTransmissionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandRequest(CommandRequest other) : this() {
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandRequest Clone() {
      return new CommandRequest(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandRequest other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcousticPayload : pb::IMessage<AcousticPayload> {
    private static readonly pb::MessageParser<AcousticPayload> _parser = new pb::MessageParser<AcousticPayload>(() => new AcousticPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcousticPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcousticTransmission.AcousticTransmissionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcousticPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcousticPayload(AcousticPayload other) : this() {
      address_ = other.address_;
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      range_ = other.range_ != null ? other.range_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcousticPayload Clone() {
      return new AcousticPayload(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private global::AcousticTransmission.NanomodemPayload payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AcousticTransmission.NanomodemPayload Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 3;
    private global::AcousticTransmission.NanomodemRange range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AcousticTransmission.NanomodemRange Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcousticPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcousticPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (!object.Equals(Payload, other.Payload)) return false;
      if (!object.Equals(Range, other.Range)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (range_ != null) hash ^= Range.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (payload_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Payload);
      }
      if (range_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Range);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (range_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Range);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcousticPayload other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          payload_ = new global::AcousticTransmission.NanomodemPayload();
        }
        Payload.MergeFrom(other.Payload);
      }
      if (other.range_ != null) {
        if (range_ == null) {
          range_ = new global::AcousticTransmission.NanomodemRange();
        }
        Range.MergeFrom(other.Range);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            if (payload_ == null) {
              payload_ = new global::AcousticTransmission.NanomodemPayload();
            }
            input.ReadMessage(payload_);
            break;
          }
          case 26: {
            if (range_ == null) {
              range_ = new global::AcousticTransmission.NanomodemRange();
            }
            input.ReadMessage(range_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcousticResponse : pb::IMessage<AcousticResponse> {
    private static readonly pb::MessageParser<AcousticResponse> _parser = new pb::MessageParser<AcousticResponse>(() => new AcousticResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcousticResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcousticTransmission.AcousticTransmissionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcousticResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcousticResponse(AcousticResponse other) : this() {
      success_ = other.success_;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcousticResponse Clone() {
      return new AcousticResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    private global::AcousticTransmission.NanomodemRequest request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AcousticTransmission.NanomodemRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcousticResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcousticResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (!object.Equals(Request, other.Request)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (request_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcousticResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          request_ = new global::AcousticTransmission.NanomodemRequest();
        }
        Request.MergeFrom(other.Request);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (request_ == null) {
              request_ = new global::AcousticTransmission.NanomodemRequest();
            }
            input.ReadMessage(request_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NanomodemRequest : pb::IMessage<NanomodemRequest> {
    private static readonly pb::MessageParser<NanomodemRequest> _parser = new pb::MessageParser<NanomodemRequest>(() => new NanomodemRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NanomodemRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcousticTransmission.AcousticTransmissionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NanomodemRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NanomodemRequest(NanomodemRequest other) : this() {
      reqType_ = other.reqType_;
      scheduled_ = other.scheduled_;
      msg_ = other.msg_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NanomodemRequest Clone() {
      return new NanomodemRequest(this);
    }

    /// <summary>Field number for the "req_type" field.</summary>
    public const int ReqTypeFieldNumber = 1;
    private global::AcousticTransmission.NanomodemRequest.Types.Type reqType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AcousticTransmission.NanomodemRequest.Types.Type ReqType {
      get { return reqType_; }
      set {
        reqType_ = value;
      }
    }

    /// <summary>Field number for the "scheduled" field.</summary>
    public const int ScheduledFieldNumber = 2;
    private bool scheduled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Scheduled {
      get { return scheduled_; }
      set {
        scheduled_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NanomodemRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NanomodemRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqType != other.ReqType) return false;
      if (Scheduled != other.Scheduled) return false;
      if (Msg != other.Msg) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReqType != 0) hash ^= ReqType.GetHashCode();
      if (Scheduled != false) hash ^= Scheduled.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReqType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ReqType);
      }
      if (Scheduled != false) {
        output.WriteRawTag(16);
        output.WriteBool(Scheduled);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (Id != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReqType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqType);
      }
      if (Scheduled != false) {
        size += 1 + 1;
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NanomodemRequest other) {
      if (other == null) {
        return;
      }
      if (other.ReqType != 0) {
        ReqType = other.ReqType;
      }
      if (other.Scheduled != false) {
        Scheduled = other.Scheduled;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            reqType_ = (global::AcousticTransmission.NanomodemRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 16: {
            Scheduled = input.ReadBool();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
          case 32: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NanomodemRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("BRDCST")] Brdcst = 0,
        [pbr::OriginalName("UNICST")] Unicst = 1,
        [pbr::OriginalName("PINGID")] Pingid = 2,
        [pbr::OriginalName("VOLTID")] Voltid = 3,
        [pbr::OriginalName("CHNGID")] Chngid = 4,
        [pbr::OriginalName("STATUS")] Status = 5,
        [pbr::OriginalName("UNISTACK")] Unistack = 6,
        [pbr::OriginalName("TESTMSG")] Testmsg = 7,
        [pbr::OriginalName("ECHOMSG")] Echomsg = 8,
        [pbr::OriginalName("QUALITY")] Quality = 9,
      }

    }
    #endregion

  }

  public sealed partial class NanomodemPayload : pb::IMessage<NanomodemPayload> {
    private static readonly pb::MessageParser<NanomodemPayload> _parser = new pb::MessageParser<NanomodemPayload>(() => new NanomodemPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NanomodemPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcousticTransmission.AcousticTransmissionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NanomodemPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NanomodemPayload(NanomodemPayload other) : this() {
      msgType_ = other.msgType_;
      msg_ = other.msg_;
      senderId_ = other.senderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NanomodemPayload Clone() {
      return new NanomodemPayload(this);
    }

    /// <summary>Field number for the "msg_type" field.</summary>
    public const int MsgTypeFieldNumber = 1;
    private global::AcousticTransmission.NanomodemPayload.Types.Type msgType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AcousticTransmission.NanomodemPayload.Types.Type MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 3;
    private uint senderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NanomodemPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NanomodemPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (Msg != other.Msg) return false;
      if (SenderId != other.SenderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType != 0) hash ^= MsgType.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (SenderId != 0) hash ^= SenderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MsgType);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (SenderId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SenderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (SenderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SenderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NanomodemPayload other) {
      if (other == null) {
        return;
      }
      if (other.MsgType != 0) {
        MsgType = other.MsgType;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.SenderId != 0) {
        SenderId = other.SenderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgType_ = (global::AcousticTransmission.NanomodemPayload.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            SenderId = input.ReadUInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NanomodemPayload message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("BRDCST")] Brdcst = 0,
        [pbr::OriginalName("UNICST")] Unicst = 1,
      }

    }
    #endregion

  }

  public sealed partial class NanomodemRange : pb::IMessage<NanomodemRange> {
    private static readonly pb::MessageParser<NanomodemRange> _parser = new pb::MessageParser<NanomodemRange>(() => new NanomodemRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NanomodemRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcousticTransmission.AcousticTransmissionReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NanomodemRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NanomodemRange(NanomodemRange other) : this() {
      range_ = other.range_;
      rangeM_ = other.rangeM_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NanomodemRange Clone() {
      return new NanomodemRange(this);
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 1;
    private uint range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "range_m" field.</summary>
    public const int RangeMFieldNumber = 2;
    private float rangeM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RangeM {
      get { return rangeM_; }
      set {
        rangeM_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NanomodemRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NanomodemRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Range != other.Range) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RangeM, other.RangeM)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Range != 0) hash ^= Range.GetHashCode();
      if (RangeM != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RangeM);
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Range != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Range);
      }
      if (RangeM != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(RangeM);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Range != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Range);
      }
      if (RangeM != 0F) {
        size += 1 + 4;
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NanomodemRange other) {
      if (other == null) {
        return;
      }
      if (other.Range != 0) {
        Range = other.Range;
      }
      if (other.RangeM != 0F) {
        RangeM = other.RangeM;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Range = input.ReadUInt32();
            break;
          }
          case 21: {
            RangeM = input.ReadFloat();
            break;
          }
          case 24: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
