name: Run unit tests

on:
    push:
      branches:
        - 'dev'
    pull_request:
      types: [opened, synchronize]
    workflow_dispatch:

jobs:
  build:
    name: Run unit tests for MarusCore
    runs-on: ubuntu-latest
    steps:
      - name: Checkout MarusExample
        uses: actions/checkout@v2
        with:
          repository: labust/MarusExample
          lfs: true
          submodules: recursive
          path: ./MarusExample
          token: ${{ secrets.REPOACCESS_RO }}
          fetch-depth: 0
          
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Checkout commit from PR
        run: if [ "${{ github.event.action }}" == "synchronize" ] || [ "${{ github.event.action }}" == "opened"]; then echo pr; cd MarusExample/Assets/LabustSim; git fetch && git checkout ${GITHUB_HEAD_REF}; git checkout ${{ github.event.pull_request.head.sha }}; fi
      - name: Checkout commit from push
        run: if [ "${{ github.ref }}" = "refs/heads/dev" ]; then echo push; cd MarusExample/Assets/LabustSim; git checkout ${{ github.sha }}; fi

      - name: Run all tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_VERSION: 2021.3.0f1
        with:
          projectPath: MarusExample
          githubToken: ${{ secrets.GITHUB_TOKEN }}
